(self.webpackChunkclicker=self.webpackChunkclicker||[]).push([[5447],{5447:(e,t,o)=>{"use strict";o.r(t),o.d(t,{GeolocationPageModule:()=>h});var i=o(8583),s=o(665),n=o(2859),r=o(9493),a=o(2340),c=o(2958),l=o(7716),d=o(2482);const p=[{path:"",component:(()=>{class e{constructor(e){this.ideaService=e,this.style="mapbox://styles/mapbox/streets-v11",this.getUsers()}getUsers(){}ngOnInit(){this.dataGeo=this.ideaService.getTestGeo(),"geolocation"in navigator&&navigator.geolocation.getCurrentPosition(e=>{this.latitude=e.coords.latitude,this.longitude=e.coords.longitude,this.ideaService.sendGeo(this.latitude,this.longitude).then(()=>{console.log("geo updated")},e=>{console.log("There was a problem updating your geo :(")}),this.map=new c.Map({accessToken:a.N.mapbox.accessToken,container:"map",style:this.style,zoom:13,center:[e.coords.longitude,e.coords.latitude]}),this.map.addControl(new c.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!1,trackUserLocation:!0})),(new c.Marker).setLngLat([e.coords.longitude,e.coords.latitude]).addTo(this.map),console.log(this.map),console.log("111",this.dataGeo),this.map.on("load",()=>{this.map.addSource("earthquakes",{type:"geojson",data:this.dataGeo,cluster:!0,clusterMaxZoom:14,clusterRadius:50}),this.map.addLayer({id:"clusters",type:"circle",source:"earthquakes",filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],"#51bbd6",100,"#f1f075",750,"#f28cb1"],"circle-radius":["step",["get","point_count"],20,100,30,750,40]}}),this.map.addLayer({id:"cluster-count",type:"symbol",source:"earthquakes",filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["DIN Offc Pro Medium","Arial Unicode MS Bold"],"text-size":12}}),this.map.addLayer({id:"unclustered-point",type:"circle",source:"earthquakes",filter:["!",["has","point_count"]],paint:{"circle-color":"#11b4da","circle-radius":12,"circle-stroke-width":1,"circle-stroke-color":"#fff"}}),this.map.on("click","unclustered-point",e=>{console.log(e);const t=e.lngLat,o=`\n              <ion-card>\n                <img style="border-radius:50%; height: 100%; object-fit: cover;" src="assets/${e.features[0].properties.image}" /> \n                    \n                <ion-row>\n                  <ion-col size="4">\n                    <div style="height: 130px;width: 130px;text-align: center;display: flex;flex-direction: column;justify-content: center;">\n                    </div>\n                  </ion-col>\n                      \n                  <ion-col size="8">\n                    <ion-card-header style="padding-right: 0px;">\n                      <ion-card-subtitle class="red">${e.features[0].properties.category}</ion-card-subtitle>\n                      \x3c!-- <ion-cart-description class="title">${e.features[0].properties.notes}</ion-cart-description> --\x3e\n                      \x3c!-- <ion-card-title class="title">${e.features[0].properties.notes}</ion-card-title> --\x3e\n                    </ion-card-header>\n                        \n                    <ion-card-content>\n                      <p style="-ms-text-overflow: ellipsis;-o-text-overflow: ellipsis;text-overflow: ellipsis;overflow: hidden;-ms-line-clamp: 2;-webkit-line-clamp: 2;line-clamp: 2;display: -webkit-box;display: box;word-wrap: break-word;-webkit-box-orient: vertical;box-orient: vertical;">${e.features[0].properties.notes}</p>\n                          \n                      <ion-card-subtitle style="color: #929294;border: solid 1px #929294;border-radius: 10px;padding: 5px;width: 160px;margin-top: 10px;"> \n                        \x3c!-- {{ idea.DateTime  }} --\x3e\n                        <ion-datetime style="padding: 0px;" displayFormat="DD MMMM - HH:mm" pickerFormat="DD:MM - HH:mm" [(ngModel)]="e.features[0].properties.DateTime"></ion-datetime>\n                      </ion-card-subtitle>\n\n                      \x3c!-- team for events --\x3e\n                      <div style="display: flex;margin: 10px;">\n                        <img style="width:30px;border-radius:50%;    height: 30px;object-fit: cover;" src="assets/5.jpeg" /> \n                        <img style="width:30px;border-radius:50%;    height: 30px;object-fit: cover;" src="assets/5pe5.jpeg" /> \n                        <img style="width:30px;border-radius:50%;    height: 30px;object-fit: cover;" src="assets/727424ee87d534220ac1.jpeg" /> \n                        <img style="width:30px;border-radius:50%;    height: 30px;object-fit: cover;" src="assets/20181227modely-06.jpeg" /> \n                        <img style="width:30px;border-radius:50%;    height: 30px;object-fit: cover;" src="assets/67477036_19116253623.jpeg" /> \n                        <img style="width:30px;border-radius:50%;    height: 30px;object-fit: cover;" src="assets/727424ee87d534220ac1.jpeg" /> \n                        <div style="width: 30px;border-radius: 50%;height: 30px;color: white;background-color: #929294;display: flex;flex-direction: row;flex-wrap: nowrap;align-content: center;justify-content: center;align-items: center;">+4</div>\n                      </div>\n                    </ion-card-content>\n                  </ion-col>\n                </ion-row>\n              </ion-card>`;for(console.log(o);Math.abs(e.lngLat.lng-t[0])>180;)t[0]+=e.lngLat.lng>t[0]?360:-360;(new c.Popup).setLngLat(t).setHTML(o).addTo(this.map)}),this.map.on("mouseenter","clusters",()=>{this.map.getCanvas().style.cursor="pointer",console.log("\u041a\u043e\u0433\u0434\u0430 \u043d\u0430\u0432\u043e\u0434\u0438\u043c \u043c\u044b\u0448\u043a\u0443 \u043d\u0430 \u043a\u043b\u0430\u0441\u0442\u0435\u0440")}),this.map.on("mouseleave","clusters",()=>{this.map.getCanvas().style.cursor="",console.log("\u041a\u043e\u0433\u0434\u0430 \u0443\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u044b\u0448\u043a\u0443 \u0438\u0437 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430")}),this.map.on("click","clusters",e=>{this.map.getCanvas().style.cursor="",console.log("\u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u0438\u043a\u0430\u0435\u043c \u043d\u0430 \u043a\u043b\u0430\u0441\u0442\u0435\u0440"),this.map.setCenter(e.lngLat),this.map.zoomIn()})})})}}return e.\u0275fac=function(t){return new(t||e)(l.Y36(d.h))},e.\u0275cmp=l.Xpm({type:e,selectors:[["app-geolocation"]],decls:2,vars:0,consts:[["id","map",1,"match-parent"],["id","geocoder",1,"geocoder"]],template:function(e,t){1&e&&(l._UZ(0,"div",0),l._UZ(1,"div",1))},styles:[".match-parent[_ngcontent-%COMP%]{width:100%;height:100%}.geocoder[_ngcontent-%COMP%]{position:absolute;z-index:1;width:50%;left:50%;margin-left:-25%;top:10px}.mapboxgl-ctrl-geocoder[_ngcontent-%COMP%]{min-width:100%}"]}),e})()}];let u=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=l.oAB({type:e}),e.\u0275inj=l.cJS({imports:[[r.Bz.forChild(p)],r.Bz]}),e})(),h=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=l.oAB({type:e}),e.\u0275inj=l.cJS({imports:[[i.ez,s.u5,n.Pc,u]]}),e})()}}]);